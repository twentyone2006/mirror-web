import{Y as n,j as e,P as r}from"./index-D28y9QDW.js";import{M as s,a as t}from"./common-Bg2Nyn1Q.js";import"./prism-bash-BuoEC9zi.js";import{C as a}from"./Container-ki16HNfY.js";const o=new s;o.use(t);const i=Object.entries(Object.assign({"/src/contents/help/AOSP.md":"## AOSP 镜像使用帮助\n\n### 安装 Repo 客户端\n\n您应当首先考虑使用您的 Linux 发行版中的官方软件包。\n\n#### Ubuntu\n\n```bash\napt update\napt install repo\n```\n\n#### Archlinux\n\n```bash\npacman -Sy repo\n```\n\n#### Fedora\n\n```bash\ndnf update\ndnf install repo\n```\n\n如果这些命令不适用于您的系统（例如，您发现软件包版本已过时，或您的 Linux 发行版中没有可用的官方软件包），请使用以下命令手动安装`Repo`：\n\n```bash\nexport REPO=$(mktemp /tmp/repo.XXXXXXXXX)\ncurl -o ${REPO} https://storage.googleapis.com/git-repo-downloads/repo\ninstall -m 755 ${REPO} ~/bin/repo\n```\n\n您可能会希望从我们的镜像源获取`Repo`：\n\n```bash\nexport REPO=$(mktemp /tmp/repo.XXXXXXXXX)\ncurl -o ${REPO} https://mirrors.shanghaitech.edu.cn/git-repo/repo\ninstall -m 755 ${REPO} ~/bin/repo\n```\n\n这些命令会设置一个临时文件，将`Repo`下载到该文件中并安装。\n\n安装后，运行`repo version`，并验证输出的前几行是否与下方内容相似：\n\n```\n<repo not installed>\nrepo launcher version 2.21\n(from /usr/bin/repo)\n```\n\n- 如果报告的`repo launcher version`编号为 2.15 或更高，则表明版本号正确，安装无误。\n- `(from /usr/bin/repo)`表明是通过软件包进行安装的。\n- `(from /home/<>/bin/repo)`表明是手动安装的。\n\n### 初始化 Repo 客户端\n\n创建一个空目录来存放您的工作文件。为其指定一个您喜欢的任意名称：\n\n```bash\nmkdir WORKING_DIRECTORY\ncd WORKING_DIRECTORY\n```\n\n使用您的姓名和电子邮件地址配置`Git`，您在此处提供的姓名将显示在您提交的代码的提供方信息中：\n\n```bash\ngit config --global user.name Your Name\ngit config --global user.email you@example.com\n```\n\n### 初始化仓库：\n\n```bash\nrepo init -u https://mirrors.shanghaitech.edu.cn/git/AOSP/platform/manifest.git\n```\n\n`Repo`会在初始化仓库前尝试从官方源获取更新，如果您无法访问官方源，可设置以下环境变量以使用我们的镜像源：\n\n```bash\nexport REPO_URL=\"https://mirrors.shanghaitech.edu.cn/git/git-repo\"\n```\n\n如需签出某个特定的`Android`版本：\n\n```bash\nrepo init -u https://mirrors.shanghaitech.edu.cn/git/AOSP/platform/manifest.git -b android-13.0.0_r3\n```\n\n> 您可以在此处获取完整列表：<https://source.android.com/docs/setup/start/build-numbers#source-code-tags-and-builds>\n\n如果您收到`/usr/bin/env 'python' no such file or directory`错误消息，请先确保您已安装`Python 3`，然后运行：\n\n```bash\nsudo ln -s /usr/bin/python3 /usr/bin/python\n```\n\n初始化成功后，系统将显示一条消息，告诉您`Repo`已在工作目录中完成初始化。您的客户端目录现在包含一个`.repo`目录，这是清单等文件存放的位置。\n\n### 同步源码树\n\n如需将`Android`源码树从默认清单中指定的代码库下载到工作目录，请运行以下命令：\n\n```bash\nrepo sync\n```\n\n如需加快同步速度，请传递`-c`（当前分支）和`-j${thread}`标记：\n\n```bash\nrepo sync -c -j4\n```\n\n### 建立次级镜像\n\n当您使用多个客户端时（尤其是在带宽不足的情况下），最好为服务器的全部内容创建一个本地镜像，并从该镜像同步客户端，这将有助于减轻我们的服务器压力。\n\n以下说明假定镜像创建在`/usr/local/aosp/mirror`中。首先，创建并同步镜像本身。请注意`--mirror`标记，该标记只能在创建新客户端时指定：\n\n```bash\nmkdir -p /usr/local/aosp/mirror\ncd /usr/local/aosp/mirror\nrepo init -u https://mirrors.shanghaitech.edu.cn/git/AOSP/platform/manifest.git --mirror\nrepo sync\n```\n\n您可以将镜像存储在内网的服务器上，然后通过`NFS`、`Git`或`SSH`访问它。您还可以将其存储在移动存储盘上，并在用户之间或计算机之间传递该存储盘。\n\n### 替换已有源码的 Remote\n\n若您之前已通过某种途径获得了`AOSP`的源码，仅需修改`.repo/manifests.git/config`，将`url`字段更改为：\n\n```\nurl = https://mirrors.shanghaitech.edu.cn/git/AOSP/platform/manifest\n```\n\n即可使用我们的镜像服务。","/src/contents/help/alhp.md":"## ALHP 镜像使用帮助\n\nALHP 是一个第三方 Arch Linux 仓库，其包含用不同`x86-64`微架构功能等级、`-O3`和 LTO 编译的二进制包。\n\n本镜像包含此仓库所有受支持的微架构功能等级，包括`x86-64-v2`和`x86-64-v3`。\n\n您可以在[此处](https://mirrors.shanghaitech.edu.cn/alhp/packages.html)查询所有软件包的构建信息。\n\n### 检查系统兼容性\n\n使用`/lib/ld-linux-x86-64.so.2 --help`命令来检测您的 CPU 支持哪种微架构功能等级。\n\n比如，如果您的 CPU 支持`x86-64-v3`，则输出应该包含：\n\n```\nSubdirectories of glibc-hwcaps directories, in priority order:\n  x86-64-v4\n  x86-64-v3 (supported, searched)\n  x86-64-v2 (supported, searched)\n```\n\n### 安装密钥环和镜像列表\n\n从 AUR 安装`alhp-keyring`和`alhp-mirrorlist`。比如，使用`yay`：\n\n```bash\nyay -S alhp-keyring alhp-mirrorlist\n```\n\n`alhp-keyring`提供了当前 ALHP 使用的签名密钥，`alhp-mirrorlist`提供了一些镜像以供选择。\n\n### 选择一个镜像\n\n编辑`/etc/pacman.d/alhp-mirrorlist`，通过注释来启用或禁用镜像。默认的选择是一个基于 Cloudflare 的镜像，它本应该在全球范围内提供一个较快的速度，但由于种种原因，它可能在某些地区不可用，因此您也许会希望使用我们的镜像。\n\n您只需要将我们的镜像移动到其他镜像之前即可，譬如这样：\n\n```\n# Asia\nServer = https://mirrors.shanghaitech.edu.cn/alhp/$repo/os/$arch/\n\n## Worldwide (Cloudfare)\nServer = https://alhp.krautflare.de/$repo/os/$arch/\n```\n\n### 配置 Pacman\n\n编辑`/etc/pacman.conf`，在官方仓库的上方添加相应的仓库。\n\n比如，如果您的 CPU 支持`x86-64-v3`，则修改后应该如下所示：\n\n> Archlinux 已在 2023 年 5 月 19 日将`community`仓库合并至`extra`仓库，因此您无需添加`community-x86-64-vN`仓库。\n\n```\n[core-x86-64-v3]\nInclude = /etc/pacman.d/alhp-mirrorlist\n\n[extra-x86-64-v3]\nInclude = /etc/pacman.d/alhp-mirrorlist\n\n[core]\nInclude = /etc/pacman.d/mirrorlist\n\n[extra]\nInclude = /etc/pacman.d/mirrorlist\n```\n\n将`x86-64-v3`替换为你想使用的微架构功能等级。\n\n### 更新系统\n\n```bash\nsudo pacman -Syu\n````\n\n### 如何禁用\n\n如果您不再需要 ALHP，可以先删除`/etc/pacman.conf`中的仓库，再删除`alhp-keyring`和`alhp-mirrorlist`来禁用 ALHP。\n\n然后，你可以刷新数据库并更换回官方软件包，比如：\n\n```bash\nsudo pacman -Syuu\n```\n","/src/contents/help/alpine.md":"## Alpine 镜像使用帮助\n\nAlpine Linux 是一个面向安全，轻量级的 Linux 发行版。\n\n在终端输入以下命令以使用我们的镜像源：\n\n```bash\nsed -i 's/dl-cdn.alpinelinux.org/mirrors.shanghaitech.edu.cn/g' /etc/apk/repositories\n```","/src/contents/help/anaconda.md":"## Anaconda 镜像使用帮助\n\nAnaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows，包含了众多流行的科学计算、数据分析的 Python 包。\n\nAnaconda 安装包可以到<https://mirrors.shanghaitech.edu.cn/anaconda/archive/>下载。\n\n我们还提供了 Anaconda 仓库与第三方源（conda-forge、msys2、pytorch 等，[查看完整列表](https://mirrors.shanghaitech.edu.cn/anaconda/cloud/)）的镜像，各系统都可以通过修改用户目录下的`.condarc`文件。Windows 用户无法直接创建名为`.condarc`的文件，可先执行`conda config --set show_channel_urls yes`生成该文件之后再修改。\n\n修改 Anaconda 配置文件以使用我们的镜像站：\n\n```plain\nchannels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.shanghaitech.edu.cn/anaconda/pkgs/main\n  - https://mirrors.shanghaitech.edu.cn/anaconda/pkgs/r\n  - https://mirrors.shanghaitech.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  msys2: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  menpo: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.shanghaitech.edu.cn/anaconda/cloud\n```\n\n运行`conda clean -i`清除索引缓存，保证用的是镜像站提供的索引。\n\n运行`conda create -n myenv numpy`测试一下吧。","/src/contents/help/anthon.md":"## AOSC OS 镜像使用帮助\n\nAOSC OS（安同 OS）软件源。AOSC OS 是一个由安同开源社区（<https://aosc.io>）开发的半滚动 Linux 发行版，支持多种处理器架构。\n\n### 使用说明\n\n打开`/etc/apt/sources.list`，并手动替换：\n\n```\ndeb https://mirrors.shanghaitech.edu.cn/anthon/debs/ stable main\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n### 相关链接\n\n- 官方主页：<https://aosc.io>\n- 文档：<https://wiki.aosc.io>\n- 镜像列表：<https://aosc.io/repo>\n","/src/contents/help/aosp-monthly.md":"## AOSP Monthly 镜像使用帮助\n\n这是每月~~自动~~打包的 AOSP 初始化包。\n\n### 使用说明\n\n先下载初始化包：\n\n```bash\ncurl -C - -O https://mirrors.shanghaitech.edu.cn/aosp-monthly/aosp-latest.tar\n```\n\n校验 SHA256 值：\n\n```bash\ncurl -s https://mirrors.shanghaitech.edu.cn/aosp-monthly/aosp-latest.tar.sha256 | sha256sum -c\n```\n\n解包，会释放出一个隐藏目录`.repo`：\n\n```bash\ntar -xf aosp-latest.tar\n```\n\n同步并签出源码：\n\n```bash\nrepo sync\n```\n\n您可以只签出而不同步源码以节省时间：\n\n```bash\nrepo sync -l\n```\n\n此后，每次只需运行`repo sync`即可保持同步。","/src/contents/help/archlinux.md":"## Arch Linux 镜像使用帮助\n\n编辑`/etc/pacman.d/mirrorlist`，在文件的最顶端添加：\n\n```\nServer = https://mirrors.shanghaitech.edu.cn/archlinux/$repo/os/$arch\n```\n\n更新软件包缓存：\n\n```bash\nsudo pacman -Syy\n```","/src/contents/help/archlinuxcn.md":"## Arch Linux CN 镜像使用帮助\n\nArch Linux 中文社区仓库是由 Arch Linux 中文社区驱动的非官方用户仓库。包含中文用户常用软件、工具、字体/美化包等。\n\n完整的包信息列表（包名称/架构/维护者/状态）请[点击这里](https://github.com/archlinuxcn/repo)查看。\n\n在`/etc/pacman.conf`文件末尾添加两行：\n\n```\n[archlinuxcn]\nServer = https://mirrors.shanghaitech.edu.cn/archlinuxcn/$arch\n```\n\n然后请安装`archlinuxcn-keyring`包以导入 GPG key。\n\n```bash\nsudo pacman -S archlinuxcn-keyring\n```","/src/contents/help/armbian.md":"## Armbian 镜像使用帮助\n\nArmbian 是一个用于单板计算机 (SBC) 的基础操作系统平台，其他项目可以信赖它来建立专门用于 ARM 开发板的基于 Debian 或 Ubuntu 的轻量级 Linux 发行版。\n\n### 自动替换\n\n运行`armbian-config` -> Personal -> Mirrors -> 选择镜像站。\n\n### 手动替换\n\n编辑`/etc/apt/sources.list.d/armbian.list`，将`http://apt.armbian.com`替换为`https://mirror.shanghaitech.edu.cn/armbian/`，然后执行`apt update`。","/src/contents/help/centos.md":"## CentOS 镜像使用帮助\n\n建议先备份`/etc/yum.repos.d/`内的文件（CentOS 7 及之前为`CentOS-Base.repo`，CentOS 8 为`CentOS-Linux-*.repo`）。\n\n然后编辑`/etc/yum.repos.d/`中的相应文件，在`mirrorlist=`开头行前面加`#`注释掉，并将`baseurl=`开头行取消注释（如果被注释的话），把该行内的域名（例如`mirror.centos.org`）替换为`mirrors.shanghaitech.edu.cn`。\n\n以上步骤可以被下方的命令一步完成：\n\n```bash\nsudo sed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n         -e 's|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.shanghaitech.edu.cn|g' \\\n         -i.bak \\\n         /etc/yum.repos.d/CentOS-*.repo\n```\n\n注意其中的`*`通配符，如果只需要替换一些文件中的源，请自行增删。\n\n注意，如果需要启用其中一些 repo，需要将其中的`enabled=0`改为`enabled=1`。\n\n最后，更新软件包缓存：\n\n```bash\nsudo yum makecache\n```\n","/src/contents/help/debian.md":'## Debian 镜像使用帮助\n\n\n先安装`ca-certificates`和`apt-transport-https`保证第三方 https 源可以使用。\n\n```bash\nsudo apt install -y ca-certificates apt-transport-https\n```\n\n### 一键替换\n\n```bash\nsudo sed -i "s|http://deb.debian.org/debian|https://mirrors.shanghaitech.edu.cn/debian|g" /etc/apt/sources.list\n```\n\n### 手动替换\n\n打开`/etc/apt/sources.list`，将类似于`http://deb.debian.org/debian`的地址均替换为`https://mirror.shanghaitech.edu.cn/debian`即可。',"/src/contents/help/deepin.md":'## Deepin 镜像使用帮助\n\n备份`/etc/apt/sources.list`，然后一键替换：\n\n```bash\necho -e "deb [by-hash=force] https://mirrors.shanghaitech.edu.cn/deepin unstable main contrib non-free \\ndeb-src https://mirrors.shanghaitech.edu.cn/deepin unstable main contrib non-free" | sudo tee /etc/apt/sources.list\n```',"/src/contents/help/default.md":"## Welcome\n\n打开抽屉以浏览帮助。","/src/contents/help/fedora.md":"## Fedora 镜像使用帮助\n\n备份`/etc/yum.repos.d/fedora.repo`、`/etc/yum.repos.d/fedora-updates.repo`、`/etc/yum.repos.d/fedora-modular.repo`和`/etc/yum.repos.d/fedora-updates-modular.repo`四个文件。\n\n### 一键替换\n\n```bash\nsudo sed -e 's|^metalink=|#metalink=|g' \\\n         -e 's|^#baseurl=https://download.fedoraproject.org/pub/fedora/linux|baseurl=https://mirrors.shanghaitech.edu.cn/fedora|g' \\\n         -i.bak \\\n         /etc/yum.repos.d/fedora.repo \\\n         /etc/yum.repos.d/fedora-updates.repo \\\n         /etc/yum.repos.d/fedora-modular.repo \\\n         /etc/yum.repos.d/fedora-updates-modular.repo\n```\n\n### 手动替换\n\n修改以上文件，替换为下面内容：\n\n**fedora 仓库（/etc/yum.repos.d/fedora.repo）**\n\n```\n[fedora]\nname=Fedora $releasever - $basearch\nfailovermethod=priority\nbaseurl=https://mirrors.shanghaitech.edu.cn/fedora/releases/$releasever/Everything/$basearch/os/\nmetadata_expire=28d\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch\nskip_if_unavailable=False\n```\n\n**updates 仓库（/etc/yum.repos.d/fedora-updates.repo）**\n\n```\n[updates]\nname=Fedora $releasever - $basearch - Updates\nfailovermethod=priority\nbaseurl=https://mirrors.shanghaitech.edu.cn/fedora/updates/$releasever/Everything/$basearch/\nenabled=1\ngpgcheck=1\nmetadata_expire=6h\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch\nskip_if_unavailable=False\n```\n\n**fedora-modular 仓库（/etc/yum.repos.d/fedora-modular.repo）**\n\n```\n[fedora-modular]\nname=Fedora Modular $releasever - $basearch\nfailovermethod=priority\nbaseurl=https://mirrors.shanghaitech.edu.cn/fedora/releases/$releasever/Modular/$basearch/os/\nenabled=1\nmetadata_expire=7d\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch\nskip_if_unavailable=False\n```\n\n**updates-modular 仓库（/etc/yum.repos.d/fedora-modular.repo）**\n\n```\n[updates-modular]\nname=Fedora Modular $releasever - $basearch - Updates\nfailovermethod=priority\nbaseurl=https://mirrors.shanghaitech.edu.cn/fedora/updates/$releasever/Modular/$basearch/\nenabled=1\ngpgcheck=1\nmetadata_expire=6h\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch\nskip_if_unavailable=False\n```","/src/contents/help/git-repo.md":'## Repo 镜像使用帮助\n\n您应当首先考虑使用您的 Linux 发行版中的官方软件包。\n\n如果您发现软件包版本已过时，或您的 Linux 发行版中没有可用的官方软件包，您可以从 Google 官方（参见`AOSP`帮助文档）或我们的镜像源获取`Repo`：\n\n```bash\nexport REPO=$(mktemp /tmp/repo.XXXXXXXXX)\ncurl -o ${REPO} https://mirrors.shanghaitech.edu.cn/git-repo/repo\ninstall -m 755 ${REPO} ~/bin/repo\n```\n\n`Repo`会在初始化仓库前尝试从官方源获取更新，如果您无法访问官方源，可设置以下环境变量以使用我们的镜像源：\n\n```bash\nexport REPO_URL="https://mirrors.shanghaitech.edu.cn/git/git-repo"\n```',"/src/contents/help/kali.md":'## Kali Linux 镜像使用帮助\n\n### 一键替换\n\n运行如下指令：\n\n```bash\nsudo sed -i "s|http://http.kali.org/kali|https://mirrors.shanghaitech.edu.cn/kali|g" /etc/apt/sources.list\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n### 手动替换\n\n打开`/etc/apt/sources.list`，将原来的内容修改为如下所示：\n\n```\ndeb http://mirrors.shanghaitech.edu.cn/kali kali-rolling main non-free contrib\n# deb-src http://mirrors.shanghaitech.edu.cn/kali kali-rolling main non-free contrib\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n注：默认注释源码镜像以提升同步速度。',"/src/contents/help/linuxmint.md":"## Linux Mint 镜像使用帮助\n\nLinux Mint 也采用 apt 作为包管理器，与 Ubuntu 和 Debian 类似，你需要编辑`/etc/apt/sources.list`和`/etc/apt/sources.list.d/*`中的路径。对于来自 Ubuntu 的部分源，可以参考 Ubuntu 镜像使用帮助进行修改。\n\n以 sonya 为例，需要修改`/etc/apt/sources.list.d/mint.list`，把`packages.linuxmint.com`替换为`mirrors.shanghaitech.edu.cn/linuxmint`。\n\n```\ndeb http://mirrors.shanghaitech.edu.cn/linuxmint/ sonya main upstream import backport\n```\n\n也可以使用如下命令：\n\n```bash\nsed -i 's/packages.linuxmint.com/mirrors.shanghaitech.edu.cn\\/linuxmint/g' /etc/apt/sources.list.d/mint.list\n```\n\n然后运行`apt update`即可。","/src/contents/help/manjaro.md":"## Manjaro Linux 镜像使用帮助\n\n编辑`/etc/pacman.d/mirrorlist`，在文件的最顶端添加：\n\n```\nServer = https://mirrors.shanghaitech.edu.cn/manjaro/stable/$repo/$arch\n```\n\n更新软件包缓存：\n\n```bash\nsudo pacman -Syy\n```","/src/contents/help/opensuse.md":"## openSUSE 镜像使用帮助\n\n### openSUSE Leap\n\n禁用官方软件源并添加本镜像源：\n\n```bash\nsudo zypper mr -da\n\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/distribution/leap/$releasever/repo/oss/' shtu-oss\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/distribution/leap/$releasever/repo/non-oss/' shtu-non-oss\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/update/leap/$releasever/oss/' shtu-update\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/update/leap/$releasever/non-oss/' shtu-update-non-oss\n```\n\n若您使用`Leap 15.3`，则还需添加`sle`以及`backports`源：\n\n```bash\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/update/leap/$releasever/sle/' shtu-sle-update\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/update/leap/$releasever/backports/' shtu-backports-update\n```\n\n最后，刷新软件源：\n\n```bash\nsudo zypper ref\n```\n\n注：若您使用`Leap 15.3`，且在安装时未启用在线软件源，`sle`源以及`backports`源将在系统首次更新后自动引入，请确保系统在更新后仅启用了六个所需软件源。您可使用`zypper lr` 以检查软件源状态，并使用`zypper mr -d`禁用多余软件源。\n\n### openSUSE Tumbleweed\n\n禁用官方软件源并添加本镜像源：\n\n```bash\nsudo zypper mr -da\n\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/tumbleweed/repo/oss/' shtu-oss\nsudo zypper ar -cfg 'https://mirrors.shanghaitech.edu.cn/opensuse/tumbleweed/repo/non-oss/' shtu-non-oss\n```\n\n刷新软件源：\n\n```bash\nsudo zypper ref\n```","/src/contents/help/pypi.md":"## PyPI 镜像使用帮助\n\n### 临时使用\n\n```\npip install -i https://mirrors.shanghaitech.edu.cn/pypi/web/simple some-package\n```\n\n### 设为默认\n\n```\npython -m pip install -i https://mirrors.shanghaitech.edu.cn/pypi/web/simple --upgrade pip\npip config set global.index-url https://mirrors.shanghaitech.edu.cn/pypi/web/simple\n```","/src/contents/help/raspbian.md":"## Raspbian 镜像使用帮助\n\n打开`/etc/apt/sources.list`，检查您的版本代号，并将所有原来的内容修改为如下所示，您应手动将示例中的`$version`替换为您自己使用的 Raspbian 的版本代号。\n\n```\ndeb http://mirrors.shanghaitech.edu.cn/raspbian/raspbian/ $version main non-free contrib rpi\n# deb-src http://mirrors.shanghaitech.edu.cn/raspbian/raspbian/ $version main non-free contrib rpi\n```\n\n更新索引以检查是否配置正确：\n\n```bash\napt update\n```\n\n注：网址末尾的`raspbian`重复两次是必须的。因为`Raspbian`仓库中除了 APT 软件源还包含其他代码，APT 软件源不在仓库的根目录，而在`raspbian`目录的子目录下。","/src/contents/help/ros.md":"## ROS 镜像使用帮助\n\n新建`/etc/apt/sources.list.d/ros-latest.list`，内容为（您应手动将示例中的`$version`替换为您自己使用的Ubuntu/Debian的版本代号）：\n\n```plain\ndeb https://mirrors.shanghaitech.edu.cn/ros/ubuntu/ $version main\n```\n\n然后再输入如下命令，信任 ROS 的 GPG Key，并更新索引：\n\n```plain\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\nsudo apt update\n```","/src/contents/help/scoop.md":"## Scoop 镜像使用帮助\n\nScoop 是一个 Windows 平台的软件包管理器。\n\n### 使用说明\n\n本镜像包含了部分常用的 Scoop Bucket。\n\n```\nscoop bucket add main https://mirrors.shanghaitech.edu.cn/git/scoop/main\nscoop bucket add extras https://mirrors.shanghaitech.edu.cn/git/scoop/extras\nscoop bucket add java https://mirrors.shanghaitech.edu.cn/git/scoop/java\nscoop bucket add games https://mirrors.shanghaitech.edu.cn/git/scoop/games\nscoop bucket add versions https://mirrors.shanghaitech.edu.cn/git/scoop/versions\nscoop bucket add scoopet https://mirrors.shanghaitech.edu.cn/git/scoop/scoopet\nscoop bucket add lemon https://mirrors.shanghaitech.edu.cn/git/scoop/lemon\n```\n\n您可以访问在线目录列表 <https://mirrors.shanghaitech.edu.cn/scoop/> 查看更多 Bucket。","/src/contents/help/ubuntu-ports.md":"## Ubuntu Ports 镜像使用帮助\n\n打开`/etc/apt/sources.list`，检查您的版本代号，并将所有原来的内容修改为如下所示，您应手动将示例中的`$version`替换为您自己使用的 Ubuntu 的版本代号：\n\n```\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-updates main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-updates main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-backports main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-backports main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-security main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu-ports/ $version-security main restricted universe multiverse\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n注：默认注释源码镜像以提升同步速度。","/src/contents/help/ubuntu-releases.md":"## Ubuntu Releases 镜像使用帮助\n\n您可以直接前往<https://mirrors.shanghaitech.edu.cn/ubuntu-releases/>或于镜像站首页获取下载链接。\n\n**注意，只包含当前仍受支持的版本的`ISO`镜像。**","/src/contents/help/ubuntu.md":"## Ubuntu 镜像使用帮助\n\n### 一键替换\n\n运行如下指令：\n\n```bash\nsudo sed -e 's|http://cn.archive.ubuntu.com/ubuntu|https://mirrors.shanghaitech.edu.cn/ubuntu|g' \\\n         -e 's|http://security.ubuntu.com/ubuntu|https://mirrors.shanghaitech.edu.cn/ubuntu|g' \\\n         /etc/apt/sources.list\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n### 手动替换\n\n打开`/etc/apt/sources.list`，检查您的版本代号，并将所有原来的内容修改为如下所示，您应手动将示例中的`$version`替换为您自己使用的 Ubuntu 的版本代号：\n\n```\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu/ $version main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu/ $version main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-updates main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-updates main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-backports main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-backports main restricted universe multiverse\ndeb https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-security main restricted universe multiverse\n# deb-src https://mirrors.shanghaitech.edu.cn/ubuntu/ $version-security main restricted universe multiverse\n```\n\n并更新索引：\n\n```bash\napt update\n```\n\n注：默认注释源码镜像以提升同步速度。"})),c=()=>{const s=`${n().name??"default"}.md`,t=i.find((([n])=>n.endsWith(s)));return e.jsx(a,{maxWidth:"lg",children:e.jsx(r,{elevation:3,className:"markdown-body",sx:{px:3,pt:3,pb:1},dangerouslySetInnerHTML:{__html:o.render(t[1])}})})};export{c as default};
